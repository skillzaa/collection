class t{constructor(){this.parentId=0,this.id=0,this.sortOrder=0,this.createdAt=0,this.title="New Node",this.selected=!1,this.highlighted=!1,this.internalGap=2,this.folded=!1,this.titleCapitalization="first",this.details="",this.border=2,this.borderRadius=15,this.padding=8,this.fontSize=22,this.fontColor="#343a40",this.width=null,this.height=null,this.minWidth=50,this.minHeight=50,this.fontFamily="Impact",this.overWriteStyle=!1,this.x=0,this.y=0,this.titleX=null,this.titleY=null,this.childLess=null,this.ccw=null}setProperty(t,e){return"string"==typeof t&&(this[t]=e,!0)}getProperty(t){return this[t]}}class e{constructor(){this.message=[],this.success=!1,this.value=null,this.errorNumber=0}addMessage(t=""){this.message.push(t)}}export default class{constructor(t=[]){this.useRandomIds=!0,this.debugMode=!0,this.data=[],this.idCounter=1,this.sortOrderCounter=1,this.data=t}add(e=""){const r=new t;return r.id=this.newId(),r.sortOrder=this.sortOrderCounter++,r.parentId=e,r.createdAt=(new Date).getTime(),this.data.push(r),r}insert(t){if(void 0===t.id){const t=new e;return t.addMessage("The id is undefined. Id is must to insert an object using insert method."),t.errorNumber=1,t}if(!0!==this.isIdUnique(t.id)){const t=new e;return t.addMessage("The id provided already exists in the system. Please provide a unique id"),t.errorNumber=2,t}return void 0!==t.sortOrder&&"number"==typeof t.sortOrder||(t.sortOrder=this.sortOrderCounter++),void 0===t.parentId&&(t.parentId=0),this.data.push(t),t}indexToId(t){if(t>=this.data.length){const t=new e;return t.addMessage("The index is larger than the number of items in the collection."),t.errorNumber=3,t}return this.data[t].id}idToIndex(t){let r;if(this.data.forEach((e,i)=>{e.id==t&&(r=i)}),"number"!=typeof r||"string"!=typeof r){const t=new e;return t.addMessage("Could not find the index. Most probably the id was not found."),t.errorNumber=3,t}return r}isFirst(t){return this.data[0].id==t}getFirst(){return this.data[0]}getLast(){return this.data[this.data.length-1]}isLast(t){return this.data[this.data.length-1].id==t}searchFirst(t,e){for(let r=0;r<this.data.length;r++)if(this.data[r][t]==e)return this.data[r];return!1}search(t="id",e=0){const r=[];return this.data.forEach(i=>{i[t]==e&&r.push(i)}),r}searchAndFirst(t,e,r,i){for(let s=0;s<this.data.length;s++){const d=this.data[s];if(d[t]==e&&d[r]==i)return d}return!1}searchAnd(t,e,r,i){const s=[];for(let d=0;d<this.data.length;d++){const a=this.data[d];a[t]==e&&a[r]==i&&s.push(a)}return s}find(t){let e=!1;return this.data.forEach(r=>{r.id==t&&(e=r)}),e}findChildren(t){let e=[];return this.data.forEach(r=>{r.parentId==t&&e.push(r)}),e}sort(t="sortOrder",e=!0){let r=this.data.sort((e,r)=>{const i=e[t]||0,s=r[t]||0;let d=0;return i>s?d=1:i<s&&(d=-1),d});if(!0===e)return this.data=r,r;return r.map(t=>Object.assign({},t))}sortDesc(t,e=!1){let r=this.data.sort((e,r)=>{const i=e[t]||0,s=r[t]||0;let d=0;return i>s?d=-1:i<s&&(d=1),d});if(!0===e)return this.data=r,r;return r.map(t=>Object.assign({},t))}push(t){return this.data.push(t),!0}get length(){return this.data.length}getPrevByIndex(t){if(0==this.isFirst(t.id)){let e=this.idToIndex(t.id);return this.data[e-1]}return!1}getNextByIndex(t){if(0==this.isLast(t.id)){let e=this.idToIndex(t.id);return this.data[e+1]}return!1}setPropertyAll(t,e){return this.data.forEach(r=>{r.setProperty(t,e)}),!0}setRandom(){this.data.forEach(t=>{t.setProperty("random",Math.ceil(9999*Math.random()))})}delete(t){"object"==typeof t?this.data=this.data.filter(e=>e.id!==t.id):"number"==typeof t&&(this.data=this.data.filter(t=>{t.id}))}newId(){return!0===this.debugMode?this.idCounter++:this.uuid()}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(t){var e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)}))}isIdUnique(t){for(let e=0;e<this.data.length;e++)if(this.data[e].id==t)return!1;return!0}blankCopy(){return new t}}
